// Задача 54: Задайте двумерный массив. Напишите программу, 
//которая упорядочит по убыванию элементы каждой строки двумерного массива.
// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// В итоге получается вот такой массив:
// 7 4 2 1
// 9 5 3 2
// 8 4 4 2

// int[,] -> int [rows,columns]
// Матрица - прямоугольная таблица с размером m * n
// Квадратная матрица - таблица, у которой кол-во строк = кол-во столбцов
// Прямоугольная матрица - таблица, у которой кол-во строк != кол-во столбцов
// m - кол-во стр, n - кол-во столбцов
// int[,] GetMatrix(int m, int n, int minValue, int maxValue)
// {
// int[,] matrix = new int[m, n]; // m - кол-во строков, n - кол-во столбцов
// for (int i = 0; i < matrix.GetLength(0); i++) // matrix.GetLength(0) = m, по строчкам
// {
// for (int j = 0; j < matrix.GetLength(1); j++) // j, m, k
// // matrix.GetLength(1) = n, по столбцам
// {
// matrix[i, j] = new Random().Next(minValue, maxValue + 1);
// }
// }
// return matrix;
// }

// void PrintMatrix(int[,] inputMatrix)
// {
// for (int i = 0; i < inputMatrix.GetLength(0); i++)
// {
// for (int j = 0; j < inputMatrix.GetLength(1); j++)
// {
// Console.Write(inputMatrix[i, j] + "\t"); // Строчку с индексом
// }

//     Console.WriteLine(); // После строчки можно сделать перенос
// }
// }
// int temp = 0;
// void FindSum(int[,] matrix)
// {
//     for (int i = 0; i < matrix.GetLength(0); i++)
//     {
//         for (int j = 0; j < matrix.GetLength(1); j++)
//         {
//           if([i] < 0)
//           {
            
//           }
//         }
//     }
// }
// Console.Write("Введите количество строк: ");
// int rows = Convert.ToInt32(Console.ReadLine());
// Console.Write("Введите количество столбцов: ");
// int columns = Convert.ToInt32(Console.ReadLine());
// int[,] result = GetMatrix(rows, columns, 0, 10); // Создали матрицу
// PrintMatrix(result);
// FindSum(result);
// Console.WriteLine(" другой массив: ");





// Задача 56: Задайте прямоугольный двумерный массив. Напишите программу,
// которая будет находить строку с наименьшей суммой элементов.
// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// 5 2 6 7
// Программа считает сумму элементов в каждой строке и выдаёт номер строки с наименьшей суммой элементов: 1 строка
// int indexRow = 1;
// int minSumElem = Int32.MaxValue;
// int[,] GetMatrix(int m, int n, int minValue, int maxValue)
// {
// int[,] matrix = new int[m, n]; // m - кол-во строков, n - кол-во столбцов
// for (int i = 0; i < matrix.GetLength(0); i++) // matrix.GetLength(0) = m, по строчкам
// {
// for (int j = 0; j < matrix.GetLength(1); j++) // j, m, k
// // matrix.GetLength(1) = n, по столбцам
// {
// matrix[i, j] = new Random().Next(minValue, maxValue + 1);
// }
// }
// return matrix;
// }

// void PrintMatrix(int[,] inputMatrix)
// {
// for (int i = 0; i < inputMatrix.GetLength(0); i++)
// {
// for (int j = 0; j < inputMatrix.GetLength(1); j++)
// {
// Console.Write(inputMatrix[i, j] + "\t"); // Строчку с индексом
// }

//     Console.WriteLine(); // После строчки можно сделать перенос
// }
// }
// void FindSum(int[,] matrix)
// {
//     for (int i = 0; i < matrix.GetLength(0); i++)
//     {
//        int sum = 0;
//         for (int j = 0; j < matrix.GetLength(1); j++)
//         {
//             sum = sum + matrix[i,j];
//         }
//         if (sum < minSumElem)
//         {
//           minSumElem = sum;
//           indexRow = i;  
//         }
//         Console.WriteLine(minSumElem);
//     }
// }
// Console.Write("Введите количество строк: ");
// int rows = Convert.ToInt32(Console.ReadLine());
// Console.Write("Введите количество столбцов: ");
// int columns = Convert.ToInt32(Console.ReadLine());
// int[,] result = GetMatrix(rows, columns, 0, 10); // Создали матрицу
// PrintMatrix(result);
// FindSum(result);
// Console.WriteLine("Строка с наименьшей суммой элементов под номером: " + (indexRow) + ", с суммой элементов равной:" + (minSumElem));
